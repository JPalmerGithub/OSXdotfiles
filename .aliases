#!/bin/bash
#########################
# 	Easier Directory Navigation: 

    alias cd..='cd ../'                         # Go back 1 directory level (for fast typers)
    alias ..='cd ../'                           # Go back 1 directory level
    alias ...='cd ../../'                       # Go back 2 directory levels
    alias .3='cd ../../../'                     # Go back 3 directory levels
    alias .4='cd ../../../../'                  # Go back 4 directory levels
    alias .5='cd ../../../../../'               # Go back 5 directory levels
    alias .6='cd ../../../../../../'            # Go back 6 directory levels
    alias ~="cd ~"						    	# Go to Home
	alias -- -="cd -"                           # Go to previous directory

#   lr:  Full Recursive Directory Listing (VERRRRY LOOONNNGGGG!!!)
#   -----------------------------------------------------------------------------------
    alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'' | less'

    alias drop="cd ~/Dropbox"
    alias dload="cd ~/Downloads"
    alias dt="cd ~/Desktop"
    alias pr="cd ~/Projects"
 
#########################
# 	Shortcuts

	alias cp='cp -iv'                           # Preferred 'cp' implementation
	alias mv='mv -iv'                           # Preferred 'mv' implementation
	alias mkdir='mkdir -pv'                     # Preferred 'mkdir' implementation
	alias ll='ls -FGlAhp'                       # Preferred 'ls' implementation
	alias less='less -FSRXc'                    # Preferred 'less' implementation
	cd() { builtin cd "$@"; ll; }               # Always list directory contents upon 'cd'
    alias f='open -a Finder ./'                 # f:            Opens current directory in MacOS Finder
    alias which='type -all'                     # which:        Find executables
    alias path='echo -e ${PATH//:/\\n}'         # path:         Echo all executable Paths
    alias show_options='shopt'                  # Show_options: display bash options settings
    alias fix_stty='stty sane'                  # fix_stty:     Restore terminal settings when screwed up
    alias cic='set completion-ignore-case On'   # cic:          Make tab-completion case-insensitive
    mcd () { mkdir -p "$1" && cd "$1"; }        # mcd:          Makes new Dir and jumps inside
    trash () { command mv "$@" ~/.Trash ; }     # trash:        Moves a file to the MacOS trash
    ql () { qlmanage -p "$*" >& /dev/null; }    # ql:           Opens any file in MacOS Quicklook Preview
    alias DT='tee ~/Desktop/terminalOut.txt'    # DT:           Pipe content to file on MacOS Desktop
    alias cls=clear                             # Shorten the Clear Command and make it more familiar
    alias h="history"                           # shorten the History command
    alias j="jobs"                              # Shorten the Jobs command

#   Open Sublime Text with filename from CLI    
#   -----------------------------------------------------------------------------------
	alias edit="/Applications/'Sublime Text 2.app'/Contents/SharedSupport/bin/subl $1"

# 	Detect which `ls` flavor is in use
#   -----------------------------------------------------------------------------------
	if ls --color > /dev/null 2>&1; then # GNU `ls`
		colorflag="--color"
	else # OS X `ls`
		colorflag="-G"
	fi

	alias l="ls -lF ${colorflag}"					# List all files colorized in long format
	alias la="ls -laF ${colorflag}"					# List all files colorized in long format, including dot files
	alias l.="ls -dF .* ${colorflag}"				# List only dot files colorized in long format, 
    alias lsd='ls -lF ${colorflag} | grep "^d"'		# List only directories

# 	Always use color output for `ls`
	alias ls="command ls ${colorflag}"
	export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

# 	Colorize the grep command output for ease of use (good for log files)
#   -----------------------------------------------------------------------------------
	alias grep='grep --color=auto'
	alias egrep='egrep --color=auto'
	alias fgrep='fgrep --color=auto'

#   install  colordiff package
#   -----------------------------------------------------------------------------------
	alias diff='colordiff'

#   Make the mount command output in human readable format
#   -----------------------------------------------------------------------------------
	alias mount='mount |column -t'

#   Enable aliases to be sudo’ed
#   -----------------------------------------------------------------------------------
	alias sudo='sudo '

#   Gzip-enabled `curl`
#   -----------------------------------------------------------------------------------
	alias gurl='curl --compressed'

#   Get week number
#   -----------------------------------------------------------------------------------
	alias week='date +%V'

#   Stopwatch
#   -----------------------------------------------------------------------------------
	alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date' 

#   Get OS X Software Updates, and update installed Ruby gems, Homebrew, and their installed packages
#   -----------------------------------------------------------------------------------
    alias update='sudo softwareupdate -i -a; brew update; brew upgrade; brew cleanup; sudo gem update'


#########################
#	File and Folder Management

    zipf () { zip -r "$1".zip "$1" ; }          # zipf:         To create a ZIP archive of a folder
    alias numFiles='echo $(ls -1 | wc -l)'      # numFiles:     Count of non-hidden files in current dir
    alias make1mb='mkfile 1m ./1MB.dat'         # make1mb:      Creates a file of 1mb size (all zeros)
    alias make5mb='mkfile 5m ./5MB.dat'         # make5mb:      Creates a file of 5mb size (all zeros)
    alias make10mb='mkfile 10m ./10MB.dat'      # make10mb:     Creates a file of 10mb size (all zeros)

#   cdf:  'Cd's to frontmost window of MacOS Finder
#   ------------------------------------------------------
    cdf () {
        currFolderPath=$( /usr/bin/osascript <<EOT
            tell application "Finder"
                try
            set currFolder to (folder of the front window as alias)
                on error
            set currFolder to (path to desktop folder as alias)
                end try
                POSIX path of currFolder
            end tell
EOT
        )
        echo "cd to \"$currFolderPath\""
        cd "$currFolderPath"
    }

#   extract:  Extract most know archives with one command
#   ---------------------------------------------------------
    extract () {
        if [ -f $1 ] ; then
          case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
             esac
         else
             echo "'$1' is not a valid file"
         fi
    }
#########################
#	Serching Functionality

	alias qfind="find . -name "                 # qfind:    Quickly search for file
	ff () { /usr/bin/find . -name "$@" ; }      # ff:       Find file under the current directory
	ffs () { /usr/bin/find . -name "$@"'*' ; }  # ffs:      Find file whose name starts with a given string
	ffe () { /usr/bin/find . -name '*'"$@" ; }  # ffe:      Find file whose name ends with a given string
#   spotlight: Search for a file using MacOS Spotlight's metadata
#   -----------------------------------------------------------
    spotlight () { mdfind "kMDItemDisplayName == '$@'wc"; }

#########################
#	Process Management

#   findPid: find out the pid of a specified process
#   -----------------------------------------------------
#       Note that the command name can be specified via a regex
#       E.g. findPid '/d$/' finds pids of all processes with names ending in 'd'
#       Without the 'sudo' it will only find processes of the current user
#   -----------------------------------------------------
    findPid () { lsof -t -c "$@" ; }

#   memHogsTop, memHogsPs:  Find memory hogs
#   -----------------------------------------------------
    alias memHogsTop='top -l 1 -o rsize | head -20'
    alias memHogsPs='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'

#   cpuHogs:  Find CPU hogs
#   -----------------------------------------------------
    alias cpu_hogs='ps wwaxr -o pid,stat,%cpu,time,command | head -10'

#   topForever:  Continual 'top' listing (every 10 seconds)
#   -----------------------------------------------------
    alias topForever='top -l 9999999 -s 10 -o cpu'

#   ttop:  Recommended 'top' invocation to minimize resources
#   ------------------------------------------------------------
#       Taken from this macosxhints article
#       http://www.macosxhints.com/article.php?story=20060816123853639
#   -----------------------------------------------------------------------------------
    alias ttop="top -R -F -s 10 -o rsize"

#   my_ps: List processes owned by my user:
#   ------------------------------------------------------------
    my_ps() { ps $@ -u $USER -o pid,%cpu,%mem,start,time,bsdtime,command ; }



#########################
# 	Networking

    alias myip='curl ip.appspot.com'                    # myip:         Public facing IP Address
	alias localip="ipconfig getifaddr en1"
	alias ips="ifconfig -a | grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | sed -e 's/inet6* //'"
    alias netCons='lsof -i'                             # netCons:      Show all open TCP/IP sockets
    alias flushDNS='dscacheutil -flushcache'            # flushDNS:     Flush out the DNS Cache
    alias lsock='sudo /usr/sbin/lsof -i -P'             # lsock:        Display open sockets
    alias lsockU='sudo /usr/sbin/lsof -nP | grep UDP'   # lsockU:       Display only open UDP sockets
    alias lsockT='sudo /usr/sbin/lsof -nP | grep TCP'   # lsockT:       Display only open TCP sockets
    alias ipInfo0='ipconfig getpacket en0'              # ipInfo0:      Get info on connections for en0
    alias ipInfo1='ipconfig getpacket en1'              # ipInfo1:      Get info on connections for en1
    alias openPorts='sudo lsof -i | grep LISTEN'        # openPorts:    All listening connections
    alias showBlocked='sudo ipfw list'                  # showBlocked:  All ipfw rules inc/ blocked IPs
	alias whois="whois -h whois-servers.net"			# Enhanced WHOIS lookups
	alias update='sudo softwareupdate -i -a; brew update; brew upgrade; brew cleanup; sudo gem update'	# Get OS X Software Updates, and update installed Ruby gems, Homebrew, and their installed packages
	alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder" 	# Flush Directory Service cache
	alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"	# Clean up LaunchServices to remove duplicates in the “Open With” menu

#   ii:  display useful host related informaton
#   -------------------------------------------------------------------
    ii() {
        echo -e "\nYou are logged on ${RED}$HOST"
        echo -e "\nAdditionnal information:$NC " ; uname -a
        echo -e "\n${RED}Users logged on:$NC " ; w -h
        echo -e "\n${RED}Current date :$NC " ; date
        echo -e "\n${RED}Machine stats :$NC " ; uptime
        echo -e "\n${RED}Current network location :$NC " ; scselect
        echo -e "\n${RED}Public facing IP Address :$NC " ;myip
        echo -e "\n${RED}DNS Configuration:$NC " ; scutil --dns
        echo
    }

#########################
#	Web Developement

    alias apacheEdit='sudo edit /etc/httpd/httpd.conf'      # apacheEdit:       Edit httpd.conf
    alias apacheRestart='sudo apachectl graceful'           # apacheRestart:    Restart Apache
    alias editHosts='sudo edit /etc/hosts'                  # editHosts:        Edit /etc/hosts file
    alias herr='tail /var/log/httpd/error_log'              # herr:             Tails HTTP error logs
    alias apacheLogs="less +F /var/log/apache2/error_log"   # Apachelogs:   Shows apache error logs
    httpHeaders () { /usr/bin/curl -I -L $@ ; }             # httpHeaders:      Grabs headers from web page

#   httpDebug:  Download a web page and show info on what took time
#   -------------------------------------------------------------------
    httpDebug () { /usr/bin/curl $@ -o /dev/null -w "dns: %{time_namelookup} connect: %{time_connect} pretransfer: %{time_pretransfer} starttransfer: %{time_starttransfer} total: %{time_total}\n" ; }

#########################
# 	Other

#   mountReadWrite:   For use when booted into single-user
#   -----------------------------------------------------------------------------------
    alias mountReadWrite='/sbin/mount -uw /'

#   cleanupLS:  Clean up LaunchServices to remove duplicates in the "Open With" menu
#   -----------------------------------------------------------------------------------
    alias cleanupLS="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

#   ScreensaverDesktop: Run a screensaver on the Desktop
#   -----------------------------------------------------------------------------------
    alias ScreensaverDesktop='/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine -background'

# 	View HTTP traffic
#   -----------------------------------------------------------------------------------
	alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
	alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# 	Canonical hex dump; some systems have this symlinked
#   -----------------------------------------------------------------------------------
	command -v hd > /dev/null || alias hd="hexdump -C"

# 	OS X has no `md5sum`, so use `md5` as a fallback
#   -----------------------------------------------------------------------------------
	command -v md5sum > /dev/null || alias md5sum="md5"

# 	OS X has no `sha1sum`, so use `shasum` as a fallback
#   -----------------------------------------------------------------------------------
	command -v sha1sum > /dev/null || alias sha1sum="shasum"

# 	Trim new lines and copy to clipboard
#   -----------------------------------------------------------------------------------
# 	alias c="tr -d '\n' | pbcopy"

# 	Recursively delete `.DS_Store` files
#   -----------------------------------------------------------------------------------
	alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# 	Empty the Trash on all mounted volumes and the main HDD
# 	Also, clear Apple’s System Logs to improve shell startup speed
#   -----------------------------------------------------------------------------------
	alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl"

# 	Show/hide hidden files in Finder
#   -----------------------------------------------------------------------------------
	alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
	alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# 	Hide/show all desktop icons (useful when presenting)
#   -----------------------------------------------------------------------------------
	alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
	alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# 	Merge PDF files
# 	Usage: `mergepdf -o output.pdf input{1,2,3}.pdf`
#   -----------------------------------------------------------------------------------
	alias mergepdf='/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py'

# 	Disable Spotlight
#   -----------------------------------------------------------------------------------
	alias spotoff="sudo mdutil -a -i off"

# 	Enable Spotlight
#   -----------------------------------------------------------------------------------
	alias spoton="sudo mdutil -a -i on"

# 	PlistBuddy alias, because sometimes `defaults` just doesn’t cut it
#   -----------------------------------------------------------------------------------
# 	alias plistbuddy="/usr/libexec/PlistBuddy"

# 	Make Grunt print stack traces by default
#   -----------------------------------------------------------------------------------
	command -v grunt > /dev/null && alias grunt="grunt --stack"

# 	Lock the screen (when going AFK)
#   -----------------------------------------------------------------------------------
	alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
